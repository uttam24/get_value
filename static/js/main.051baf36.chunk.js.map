{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","first","setFirstName","last","setLastName","get","getData","getlast","getLastData","firstError","setFirstError","lastError","setLastError","english","setEnglish","hindi","setHindi","math","setMath","science","setScience","totalMarks","setTotalMarks","averageMarks","setAverageMarks","gradesubject","setGradeSubject","totalsubject","gradesub","console","log","className","onSubmit","e","preventDefault","type","value","onChange","item","target","length","itemlast","border","style","width","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.051baf36.chunk.js","sourcesContent":["import React, {useState} from 'react'\nimport './App.css';\n\nconst App = ()=> {\n  const [first, setFirstName] = useState();\n  const [last, setLastName] = useState();\n  const [get, getData] = useState();\n  const [getlast, getLastData] = useState();\n  const [firstError, setFirstError] = useState(false);\n  const [lastError, setLastError] = useState(false);\n\n  const [english, setEnglish] = useState();\n  const [hindi, setHindi] = useState();\n  const [math, setMath] = useState();\n  const [science, setScience] = useState();  \n  const [totalMarks, setTotalMarks] = useState();\n  const [averageMarks, setAverageMarks] = useState();\n  const [gradesubject, setGradeSubject] = useState();\n\n\n  const [printEnglish, setEnglshPrint] = useState();\n  const [printHindi, setHindiPrint] = useState();\n  const [printMath, setMathPrint] = useState();\n  const [printScience, setSciencePrint] = useState();\n\n\n  let totalsubject = (english+hindi+math+science)/4;\n  let gradesub= 0;\n  if (totalsubject > 80 ){\n    gradesub = 'A'\n  } \n  else if (totalsubject > 60 && totalsubject < 80){\n    gradesub = 'B'\n  } \n   else if (totalsubject > 45 && totalsubject < 55){\n    gradesub = 'C'\n  }\n  else{\n    gradesub = 'Fail'\n  }\n  \n\n  console.log(totalsubject)\n  const formHandler =(e)=>{\n   \n    {/* if(first.length<3 || last.length<3){\n      alert('type correct value');\n    }\n    else{\n      alert('All Good');\n    }*/}\n     e.preventDefault();\n    getData(first);\n    getLastData(last);\n    {/*setEnglshPrint(english)\n    setHindiPrint(hindi)\n    setMathPrint(math)\n    setSciencePrint(science)*/}\n    setTotalMarks(english+hindi+math+science)\n    setAverageMarks(totalsubject)\n    setGradeSubject(gradesub)\n  }\n\n\n  const getEnglish =(e)=>{\n    setEnglish(+e.target.value); \n\n  }\n  const getHindi = (e)=>{\n     setHindi(+e.target.value);\n  }\n   const getMath =(e)=>{\n    setMath(+e.target.value); \n  }\n  const getScience = (e)=>{\n     setScience(+e.target.value);\n  }\n\n  const getFirst =(e)=>{\n    \n    let item = e.target.value;\n    if(item.length<3 )\n    {\n      setFirstError(true);\n    }\n    else{\n      setFirstError(false);\n    }\n    setFirstName(item);\n  }\n  const getLast =(e)=>{\n    \n    let itemlast = e.target.value;\n      if(itemlast.length<3)\n      {\n        setLastError(true);\n      }\n      else{\n        setLastError(false);\n      }\n      setLastName(itemlast);\n  }\n\n\n  return (\n    <div className=\"App\">\n     \n      <form onSubmit={formHandler}>\n       <fieldset>\n        <legend> Student  Input Section :-</legend>\n        <div className=\"student_name\"><label>First Name :-</label><input type=\"text\" value={first} onChange={getFirst}/>{firstError?<span>invalid user name</span>:''}</div>\n        <div className=\"student_name\"><label>Last Name :-</label><input type=\"text\" value={last} onChange={getLast}/>{lastError?<span>invalid last name</span>:''}</div>\n        <div className=\"table\">\n          <table border=\"1\" style={{width:'300px'}}>\n            <tr>\n              <td>English</td>\n              <td><input type=\"text\" type=\"number\" value={english} onChange={getEnglish}/></td>\n            </tr>\n            <tr>\n              <td>Hindi</td>\n              <td><input type=\"text\" type=\"number\" value={hindi} onChange={getHindi}/></td>\n            </tr>\n            <tr>\n              <td>Math</td>\n              <td><input type=\"text\" type=\"number\" value={math} onChange={getMath}/></td>\n            </tr>\n            <tr>\n              <td>Science</td>\n              <td><input type=\"text\" type=\"number\" value={science} onChange={getScience}/></td>\n            </tr>\n          </table>\n        </div>\n        <button type=\"submit\" className=\"button_click\">Get Data</button>\n       </fieldset>\n      </form>\n      \n     <div className=\"report_card\">\n       <h2>Report Card</h2>\n       <table border=\"1\" style={{width:'300px'}}>\n       <tr>\n        <td style={{width:'120px'}}>Name :-</td>\n        <td>{get}</td>\n       </tr>\n       <tr>\n        <td style={{width:'120px'}}>Last :-</td>\n        <td>{getlast}</td>\n       </tr>\n       {/*<tr>\n        <td style={{width:'120px'}}>English :-</td>\n        <td>{printEnglish}</td>\n       </tr>\n       <tr>\n       <td style={{width:'120px'}}>Hindi :-</td>\n        <td>{printHindi}</td>\n       </tr>\n       <tr>\n       <td style={{width:'120px'}}>Math :-</td>\n        <td>{printMath}</td>\n       </tr>\n       <tr>\n       <td style={{width:'120px'}}>Science :-</td>\n        <td>{printScience}</td>\n       </tr>*/}\n        <tr>\n       <td style={{width:'120px'}}>Total Marks :-</td>\n        <td>{totalMarks}</td>\n       </tr>\n        <tr>\n        <td style={{width:'120px'}}>Average Marks :-</td>\n        <td><b>{averageMarks}</b></td>\n       </tr>\n        <tr>\n        <td style={{width:'120px'}}>Grade :-</td>\n        <td><b>{gradesubject}</b></td>\n       </tr>\n       \n       </table>\n     </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}